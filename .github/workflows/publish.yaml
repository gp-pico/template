#
# gp-pico-template
# Copyright © 2024, Greg PFISTER. MIT License.
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the “Software”), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in
# all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.
#

name: Publish

on:
  workflow_call:
    inputs:
      tag:
        description: The tag associated to the release
        type: string
        required: true

jobs:
  build:
    name: Publish
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/gp-devenv/gp-pico-devenv:24.04-${{ matrix.picoSDKVersion }}-1
    strategy:
      matrix:
        picoBoard: [ 'pico', 'pico_w', 'pico2' ]
        picoSDKVersion: [ '2.0.0' ]
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Cache builds
        uses: actions/cache@v4
        with:
          key: ${{ runner.os }}-build-${{ matrix.picoSDKVersion }}-${{ matrix.picoBoard }}-${{ hashFiles('./src/**') }}
          path: |
            ./build/${{ matrix.picoBoard }}
      - name: Upload executables
        uses: actions/github-script@v7
        env:
          TAG: ${{ inputs.tag }}
          PICO_BOARD: ${{ matrix.picoBoard }}
          PICO_SDK_VERSION: ${{ matrix.picoSDKVersion }}
        with:
          script: |
            const fs = require('fs');
            const tag = process.env.TAG;
            Console.info("Uploading for tag: " + tag);
            const release = await github.rest.repos.getReleaseByTag({
              owner: context.repo.owner, 
              repo: context.repo.repo, 
              tag: tag
            });
            Console.info("Uploading for release: " + release.data.id);
            for (const extension in [ '.elf', '.bin', '.uf2' ]) {
              const uploadFilename = process.env.PICO_BOARD + "_" + process.env.PICO_SDK_VERSION + extension;
              const sourceFilepath = "build/" + process.env.PICO_BOARD + "/gp_pico_template" + extension;
              Console.info("Uploading " + sourceFilePath + " as " + uploadFilename);
              await github.rest.repos.uploadReleaseAsset({
                owner: context.repo.owner, 
                repo: context.repo.repo, 
                release_id: release.data.id,
                name: uploadFilename,
                data: fs.readFileSync(sourceFilename)
              });
            }

# End